找点 和 找路径
什么时候需要自己去回溯


找路径的时候需要还原
将回溯的数据当作参数每次传入
在递归调用之后将数据改回来

遍历法和分治法都是深度优先

分治法的规模可以用一个参数表示
分治法可以将大问题分为许多操作一样的小问题(快排和归排)
拆开后没有交集，如果有交集可能要用动态规划

分治法需要return一个值
遍历法需要共享一个参数来存储结果

分治法模板
def divideConquer(root):
出口两种情况
    if not root:
        处理空树应该返回的结果
    if root.left is None and root.right is None:
        处理叶子应该返回的结果
        如果叶子的返回结果可以通过两个空节点的返回结果得到
        就可以省略这一段代码(二叉树的高度和深度)
    左子树返回结果=divideConquer(root.left)
    右子树返回结果=divideConquer(root.right)
    整棵树的结果 = 按照一定的方法合并左右子树的结果

    return 整棵树的结果