
okay, thanks for your explain, i guess i had a generl idea of what the problem is doing,
now can i restate the problem for you to make sure I understand every requirements of this problem.



1.if the given array is [3,4,1,2,6],k=3 what I need return is a list like[6,4,3]
2. do we make sure that k <= len(array) if k > len(array) what i should return [] or reverse sorted array
3. are you guaranteed that the array is not None
4. what if we have duplicate element in array [6,6,1,6,6] k=3 waht I should return [6,6,6,6] or [6,6,6]
5.array[len(arrat)-k:]
step:
1. using min heap to sort array
2.    0
    1   2
  3 4  5 6

3. child node 1 -> father node (i-1)//2
4. if child node >= father node okay
5. if child node < father node  swap father node and child node
6. if the child node is still < father node swap again until it become > (while k!=0)
7. k=father because we need to make sure previous element is still order after update
7. than we will got a sorted array, we can use array[]
8. [3,4,1,2,6] [3,4,1,2,6] [1,4,3,2,6] [1,2,3,4,6] [1,2,3,4,6]
9. [5,4,3,2,1] [4,5,3,2,1] [3,5,4,2,1] [3,2,4,5,1] [2,3,1,5,4]
                                       [2,3,4,5,1] [1,3,2,5,4]

10.[5,4,3,2,1] [4,5,3,2,1] [3,5,4,2,1] [3,2,4,5,1] [2,3,1,5,4]
                k=father     k = 1     [2,3,4,5,1] [1,3,2,5,4]
                k = 0                     k=1

